services:
  frontend:
    image: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network

  db:
    image: postgres:13
    container_name: postgres_container
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: eshop_db
    ports:
      - "5432:5432"
    volumes:
      - ./backend/migrations.sql:/docker-entrypoint-initdb.d/migrations.sql
    networks:
      - app-network

  backend:
    image: backend
    build:
      context: ./backend
      dockerfile: Dockerfile-backend
    ports:
      - "8080:8080"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: eshop_db
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
